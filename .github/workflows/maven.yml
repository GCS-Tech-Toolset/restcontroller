# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  JFROG_SERVER_ID: ${{ vars.JFROG_SERVER_ID }}
  JFROG_PASSWORD: ${{ vars.JFROG_PASSWORD }}
  JFROG_USERNAME: ${{ vars.JFROG_USERNAME }}
    
jobs:

    
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
      env:
        JFROG_SERVER_ID: ${{ secrets.JFROG_SERVER_ID }}
        JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
        JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
    - name: Show Secrets
      run: echo "username ${{ secrets.JFROG_USERNAME }}"
    - name: Build with Maven
      run: mvn -B deploy --file pom.xml -s ./src/main/assembly/maven-settings.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
